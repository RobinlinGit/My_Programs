#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include "CrossList.h"
void change2Up(double** A,double* b,int* solutionIndex ,int size);
void changeRow(double**A ,int row,int row2, int size);
double* Guass(double** A, int size, double* b);
//double ResA(double ** A, double* x, double* b,int size);
void Sedail(double **A, double* x, double* b, int* solutionIndex, int size);
int main(){
	
	int size = 0, nums = 0;
	scanf("%d %d",&size,&nums);

	if( size > 10000  ){
		SparseMatrix* A = new SparseMatrix(size,size);
		int row = 0, column = 0;
		double value = 0;
		for(int i = 0; i <= nums-1; i++){
			scanf("%d %d %lf",&row,&column,&value);
			A->addNode(row,column,value);
		}
		/*A->showMatrix();
		A->SwapRow(0,2);
		A->showMatrix();*/
		double* b = new double[size];
		double* x;
		for(int i = 0; i <= size-1; i++){
			scanf("%lf",b+i);
		}
	
		//x = A->Guass(b);
		x = A->Sedail(b);
		/*for(int i = 0; i <= size-1; i++)
			printf("%lf\n",x[i]);
			*/
		getchar();	
	
	
		delete A;
		delete[] b,x;
	}

	else {
		int* solutionIndex = new int[size];
		double** A = new double*[size];
		for(int i = 0; i <= size-1; i++){
			A[i] = new double[size];
			solutionIndex[i] = i;
		}
		for(int i = 0; i <= size-1; i++)
			for(int j = 0; j <= size-1; j++)
				A[i][j] = 0;
		
		int row = 0, col = 0;
		double temp = 0;
		for( int i = 0; i <= nums-1; i++ ){
			scanf("%d %d %lf",&row,&col,&temp);
			A[row][col] = temp;
		}

		double* b = new double[size];
		double* x ;
		for(int i = 0; i <= size-1; i++){
			scanf("%lf",b+i);
		}
		//ÊäÈëÐÅÏ¢
		
		x = Guass(A,size,b);
		for( int i = 0; i <= size-1; i++ )
			printf("%.8lf\n",x[i]);
		delete[] b,x,A;
	}

	getchar();
	getchar();
	return 0;
}




/*
3 4
0 0 3.00
1 1 4.00
2 1 5.00
2 2 6.66
100.01
0.55
1.00
*/
/*
3 3
0 2 1
1 1 2
2 0 3
3
2
1
*/
/*
20 400
0 0 0.237511
0 1 0.165891
0 2 0.154915
0 3 0.898172
0 4 0.523520
0 5 0.531900
0 6 0.882505
0 7 0.101946
0 8 0.164180
0 9 0.647558
0 10 0.843928
0 11 0.555165
0 12 0.886228
0 13 0.948874
0 14 0.933940
0 15 0.729047
0 16 0.980057
0 17 0.596159
0 18 0.733091
0 19 0.358400
1 0 0.488974
1 1 0.360657
1 2 0.555508
1 3 0.463311
1 4 0.363489
1 5 0.382210
1 6 0.539014
1 7 0.644644
1 8 0.399026
1 9 0.489269
1 10 0.397421
1 11 0.824529
1 12 0.031380
1 13 0.404018
1 14 0.389834
1 15 0.736754
1 16 0.053738
1 17 0.828435
1 18 0.731701
1 19 0.482436
2 0 0.806067
2 1 0.880722
2 2 0.790544
2 3 0.398396
2 4 0.434676
2 5 0.801761
2 6 0.543676
2 7 0.980139
2 8 0.532357
2 9 0.093755
2 10 0.104579
2 11 0.804248
2 12 0.116035
2 13 0.041032
2 14 0.683065
2 15 0.174611
2 16 0.636874
2 17 0.782153
2 18 0.958176
2 19 0.431225
3 0 0.377848
3 1 0.744352
3 2 0.443872
3 3 0.104461
3 4 0.687598
3 5 0.670861
3 6 0.442453
3 7 0.101722
3 8 0.875211
3 9 0.637323
3 10 0.193854
3 11 0.024408
3 12 0.250855
3 13 0.293826
3 14 0.275010
3 15 0.355410
3 16 0.960382
3 17 0.557239
3 18 0.045954
3 19 0.698823
4 0 0.517978
4 1 0.416771
4 2 0.995819
4 3 0.652236
4 4 0.226851
4 5 0.982859
4 6 0.183745
4 7 0.187866
4 8 0.659039
4 9 0.950262
4 10 0.363070
4 11 0.371506
4 12 0.759675
4 13 0.031939
4 14 0.027958
4 15 0.574649
4 16 0.269923
4 17 0.036276
4 18 0.424361
4 19 0.675066
5 0 0.094598
5 1 0.907355
5 2 0.436587
5 3 0.991700
5 4 0.979004
5 5 0.936821
5 6 0.249231
5 7 0.009385
5 8 0.787626
5 9 0.476376
5 10 0.874534
5 11 0.491870
5 12 0.898310
5 13 0.864513
5 14 0.940613
5 15 0.459945
5 16 0.949407
5 17 0.669372
5 18 0.009017
5 19 0.006871
6 0 0.909095
6 1 0.094307
6 2 0.304441
6 3 0.678073
6 4 0.975671
6 5 0.576272
6 6 0.285112
6 7 0.838303
6 8 0.126025
6 9 0.602805
6 10 0.599770
6 11 0.466052
6 12 0.223420
6 13 0.432546
6 14 0.533970
6 15 0.833725
6 16 0.902234
6 17 0.848988
6 18 0.703805
6 19 0.078990
7 0 0.207631
7 1 0.181326
7 2 0.246510
7 3 0.428478
7 4 0.289514
7 5 0.080186
7 6 0.529510
7 7 0.481342
7 8 0.524974
7 9 0.591483
7 10 0.258113
7 11 0.041714
7 12 0.673299
7 13 0.092809
7 14 0.671173
7 15 0.815444
7 16 0.194648
7 17 0.065465
7 18 0.780892
7 19 0.460627
8 0 0.382065
8 1 0.946587
8 2 0.960825
8 3 0.654801
8 4 0.338433
8 5 0.413825
8 6 0.559837
8 7 0.468530
8 8 0.899480
8 9 0.225262
8 10 0.358428
8 11 0.617002
8 12 0.818786
8 13 0.137792
8 14 0.607535
8 15 0.323952
8 16 0.733952
8 17 0.360766
8 18 0.564840
8 19 0.777536
9 0 0.660280
9 1 0.100849
9 2 0.222881
9 3 0.588746
9 4 0.996445
9 5 0.180845
9 6 0.415146
9 7 0.908550
9 8 0.109084
9 9 0.668433
9 10 0.887540
9 11 0.578033
9 12 0.948930
9 13 0.241971
9 14 0.750873
9 15 0.461684
9 16 0.174861
9 17 0.258051
9 18 0.023295
9 19 0.816764
10 0 0.758373
10 1 0.388038
10 2 0.395609
10 3 0.745055
10 4 0.788971
10 5 0.995631
10 6 0.905680
10 7 0.417147
10 8 0.634571
10 9 0.156552
10 10 0.900531
10 11 0.298809
10 12 0.874315
10 13 0.223009
10 14 0.981322
10 15 0.673959
10 16 0.105141
10 17 0.432597
10 18 0.007564
10 19 0.631388
11 0 0.173069
11 1 0.289225
11 2 0.224525
11 3 0.640870
11 4 0.794922
11 5 0.520386
11 6 0.305143
11 7 0.544138
11 8 0.080846
11 9 0.774251
11 10 0.447952
11 11 0.435666
11 12 0.393736
11 13 0.867740
11 14 0.727670
11 15 0.595226
11 16 0.314113
11 17 0.306071
11 18 0.988969
11 19 0.364876
12 0 0.517380
12 1 0.073087
12 2 0.270025
12 3 0.503676
12 4 0.632369
12 5 0.885283
12 6 0.649770
12 7 0.699009
12 8 0.411232
12 9 0.213053
12 10 0.268851
12 11 0.136633
12 12 0.936962
12 13 0.764177
12 14 0.857321
12 15 0.134387
12 16 0.348766
12 17 0.966589
12 18 0.201647
12 19 0.887498
13 0 0.995338
13 1 0.194608
13 2 0.418441
13 3 0.938041
13 4 0.811451
13 5 0.648252
13 6 0.288782
13 7 0.079050
13 8 0.712634
13 9 0.169124
13 10 0.553815
13 11 0.299721
13 12 0.436896
13 13 0.344714
13 14 0.991843
13 15 0.019492
13 16 0.398962
13 17 0.129933
13 18 0.823338
13 19 0.250927
14 0 0.707609
14 1 0.417485
14 2 0.997736
14 3 0.605344
14 4 0.448093
14 5 0.466254
14 6 0.255251
14 7 0.509416
14 8 0.100422
14 9 0.725753
14 10 0.178848
14 11 0.761375
14 12 0.162523
14 13 0.384780
14 14 0.759460
14 15 0.125108
14 16 0.283917
14 17 0.217436
14 18 0.360950
14 19 0.066119
15 0 0.080567
15 1 0.292927
15 2 0.911030
15 3 0.638924
15 4 0.830614
15 5 0.095281
15 6 0.358183
15 7 0.486898
15 8 0.809947
15 9 0.256189
15 10 0.859702
15 11 0.035303
15 12 0.309821
15 13 0.594865
15 14 0.146041
15 15 0.223276
15 16 0.313912
15 17 0.893394
15 18 0.461253
15 19 0.727151
16 0 0.043308
16 1 0.702139
16 2 0.550427
16 3 0.702657
16 4 0.126663
16 5 0.967821
16 6 0.805918
16 7 0.855880
16 8 0.637809
16 9 0.162767
16 10 0.231976
16 11 0.269500
16 12 0.681109
16 13 0.535121
16 14 0.326305
16 15 0.449137
16 16 0.718280
16 17 0.621706
16 18 0.110045
16 19 0.766798
17 0 0.491156
17 1 0.239713
17 2 0.596336
17 3 0.860949
17 4 0.513268
17 5 0.620111
17 6 0.538927
17 7 0.614405
17 8 0.898069
17 9 0.625777
17 10 0.168105
17 11 0.996269
17 12 0.934055
17 13 0.333556
17 14 0.028786
17 15 0.534532
17 16 0.944647
17 17 0.398162
17 18 0.781262
17 19 0.898326
18 0 0.446596
18 1 0.959483
18 2 0.079145
18 3 0.379662
18 4 0.715931
18 5 0.156003
18 6 0.590064
18 7 0.117415
18 8 0.621821
18 9 0.250747
18 10 0.026723
18 11 0.446946
18 12 0.947389
18 13 0.854683
18 14 0.694551
18 15 0.990390
18 16 0.087789
18 17 0.356089
18 18 0.453444
18 19 0.766825
19 0 0.486799
19 1 0.305462
19 2 0.576636
19 3 0.712123
19 4 0.248146
19 5 0.398367
19 6 0.231142
19 7 0.606873
19 8 0.414607
19 9 0.262978
19 10 0.322431
19 11 0.152785
19 12 0.599083
19 13 0.265644
19 14 0.958757
19 15 0.717347
19 16 0.279534
19 17 0.646573
19 18 0.297102
19 19 0.946883
140.29
103.6
108.55
90.058
87.397
120.64
117
88.193
113.44
103.26
108.4
110.84
115.33
90.265
74.937
99.657
107.25
131.16
109.87
105.86
*/